setwd("~/Coursera/5 - Reproducible Research/Peer Assessment 1")
# Read data
data <- read.csv("activity.csv", na.strings=c("NA"))
rcount(data)
nrow(data)
nrow(data[is.na(data$steps)==1,])
complete.cases(data)
nrow(data[complete.cases(data)==1,])
nrow(data[complete.cases(data)==0,])
# Load libraries
library(plyr)
intervalSteps <- ddply(data, .(interval), summarize, steps=mean(steps))
intervalSteps
intervalSteps <- ddply(data[complete.cases(data),], .(interval), summarize, steps=mean(steps))
intervalSteps
meanStepsPerInterval <- ddply(data[complete.cases(data),], .(interval), summarize, steps=mean(steps))
meanStepsPerIntrval
meanStepsPerInterval
data$steps[is.na(data$steps)]
ind <- which(is.na(data), arr.ind=TRUE)
ind
nrow(data)
data[ind]
data[ind,]
data[ind,]$steps
nrow(data)
nrow(data[ind])
nrow(data[ind,])
nrow(ind)
test <- merge(data, meanStepsPerInterval, by.x="interval", by.y="interval")
head(test)
test
meanStepsPerInterval <- ddply(data[complete.cases(data),], .(interval), summarize, meanSteps=mean(steps))
data$steps[is.na(data$steps)] <- meanStepsPerInterval[meanStepsPerInterval$interval==data$]
test <- merge(data, meanStepsPerInterval, by.x="interval", by.y="interval")
head(test)
data <- merge(data, meanStepsPerInterval, by.x="interval", by.y="interval")
head(data)
ind <- which(is.na(data$steps), arr.ind=TRUE)
ind
data[is.na(data$steps),]
data[is.na(data$steps),]$steps
data[is.na(data$steps),]$steps <- data[is.na(data$steps),]$meanSteps
data[is.na(data$steps),]$steps
The median for daily steps = `r round(medianDailySteps, digits=2)`
# Load libraries
library(plyr)
# Read data
data <- read.csv("activity.csv", na.strings=c("NA"))
str(data)
data$date <- as.POSIXlt(data$date)
str(data)
data$date
data$date$wday
data$weekend <- factor(c(TRUE, FALSE))
head(data)
str(data)
levels(data$weekend) <- list(TRUE = c(0,6), FALSE = c(1,2,3,4,5))
c(0,6)
test <- list(TRUE = c(0,6), FALSE = c(1,2,3,4,5))
test <- list(
animal = c("cow", "pig"),
bird = c("eagle", "pigeon")
)
test
test <- list(
animal = c(0, 6),
bird = c(1, 2, 3, 4, 5)
)
test
test <- list(
true = c(0, 6),
false = c(1, 2, 3, 4, 5)
)
test
levels(data$weekend) <- test <- list(true = c(0, 6), false = c(1, 2, 3, 4, 5))
head(data)
data$weekend <- ifelse(data$date$wday %in% c(0, 6), TRUE, FALSE)
data
data$weekend <- ifelse(data$date$wday %in% c(0, 6), TRUE, FALSE)
library(lattice)
sumData <- ddply(data, c("interval", "weekend"), summarize, meanSteps=mean(steps))
head(sumData)
# Calculate the mean per interval
meanStepsPerInterval <- ddply(data[complete.cases(data),], .(interval), summarize, meanSteps=mean(steps))
# Merge data frames
data <- merge(data, meanStepsPerInterval, by.x="interval", by.y="interval")
# Set steps to meanSteps where steps is NA
data[is.na(data$steps),]$steps <- data[is.na(data$steps),]$meanSteps
# Convert date field to POSIXlt data type
data$date <- as.POSIXlt(data$date)
# Add weekend variable
data$weekend <- ifelse(data$date$wday %in% c(0, 6), TRUE, FALSE)
# Summarize data by weekend vs weekday
sumData <- ddply(data, c("interval", "weekend"), summarize, meanSteps=mean(steps))
head(sumData)
library(lattice)
par(mfrow = c(2,1))
xyplot(data$interval ~ data$steps)
xyplot(data$steps ~ data$interval)
xyplot(data$steps ~ data$interval, type="l")
xyplot(data$steps - 1 ~ data$interval, type="l")
xyplot(data$steps/2 ~ data$interval, type="l")
xyplot(data[data$weekend == TRUE]$steps ~ data[data$weekend == TRUE]$interval, type="l")
xyplot(data[data$weekend == TRUE,]$steps ~ data[data$weekend == TRUE,]$interval, type="l")
xyplot(data[data$weekend == FALSE,]$steps ~ data[data$weekend == FALSE,]$interval, type="l")
par(mfrow = c(2,1))
with(data, {
xyplot(data[data$weekend == TRUE,]$steps ~ data[data$weekend == TRUE,]$interval, type="l")
xyplot(data[data$weekend == TRUE,]$steps ~ data[data$weekend == TRUE,]$interval, type="l")
})
par(mfrow = c(2,1))
with(data, {
xyplot(data[data$weekend == TRUE,]$steps ~ data[data$weekend == TRUE,]$interval, type="l")
xyplot(data[data$weekend == FALSE,]$steps ~ data[data$weekend == FALSE,]$interval, type="l")
})
par(mfrow = c(2,1))
with(data, {
xyplot(data[data$weekend == TRUE,]$steps ~ data[data$weekend == TRUE,]$interval, type="l"),
xyplot(data[data$weekend == FALSE,]$steps ~ data[data$weekend == FALSE,]$interval, type="l")
})
weekendData <- data[data$weekend == TRUE,]
weekdayData <- data[data$weekend == FALSE,]
xyplot(weekendData$steps ~ weekdayData$interval, type="l")
xyplot(weekendData$steps ~ weekendData$interval, type="l")
xyplot(data$steps ~ data$interval | data$weekend, layout = c(1,2))
xyplot(data$steps ~ data$interval | data$weekend, layout = c(1,2), type="l")
